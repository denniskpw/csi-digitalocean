name: Integration Test Pull Request
on: pull_request
jobs:
  integration-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: build binary
      run: |-
        VERSION="$(cat VERSION)-dev"
        LDFLAGS="-X github.com/digitalocean/csi-digitalocean/driver.version=${VERSION} -X github.com/digitalocean/csi-digitalocean/driver.commit=${GITHUB_SHA} -X github.com/digitalocean/csi-digitalocean/driver.gitTreeState=clean"
        CGO_ENABLED=0 go build -o cmd/do-csi-plugin/do-csi-plugin -ldflags "$LDFLAGS" ./cmd/do-csi-plugin
    - name: build and publish test docker image
      uses: adamwg/gpr-docker-publish@master
      id: docker
      with:
        USERNAME: denniskpw
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        IMAGE_NAME: do-csi-plugin
        BUILD_CONTEXT: cmd/do-csi-plugin
        DOCKERFILE_PATH: cmd/do-csi-plugin/Dockerfile
    - name: create DOKS cluster for testing
      uses: ./.github/actions/create-cluster-action
      id: cluster
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DigitalOceanToken }}
    - name: deploy test version to DOKS
      run: |-
        function kubectl_get_all() {
          kubectl --kubeconfig=${GITHUB_WORKSPACE}/kubeconfig -n kube-system get all
        }
        trap kubectl_get_all EXIT

        echo "access-token=${DIGITALOCEAN_ACCESS_TOKEN}" > token.env
        echo "\"${GH_PACKAGES_TOKEN}\"" | jq '{ "auths": { "docker.pkg.github.com": { "auth": . } } }' > dockerconfig.json
        kubectl --kubeconfig=${GITHUB_WORKSPACE}/kubeconfig -n kube-system create secret generic registrycreds --from-file=.dockerconfigjson=dockerconfig.json --type=kubernetes.io/dockerconfigjson
        kubectl --kubeconfig=${GITHUB_WORKSPACE}/kubeconfig -n kube-system create secret generic digitalocean --from-env-file=token.env

        cd test/kubernetes/deploy
        curl -Lo ./kustomize "https://github.com/kubernetes-sigs/kustomize/releases/download/v3.2.0/kustomize_3.2.0_linux_amd64"
        chmod 755 kustomize

        echo "edit set image"
        ./kustomize edit set image digitalocean/do-csi-plugin:dev="${IMAGE_NAME}"
        echo "build"
        ./kustomize build . --load_restrictor none | kubectl --kubeconfig=${GITHUB_WORKSPACE}/kubeconfig apply -f -
        echo "get all"
        kubectl_get_all

        echo "wait csi-do-controller-dev"
        kubectl --kubeconfig=${GITHUB_WORKSPACE}/kubeconfig -n kube-system wait --timeout=5m --for=condition=Ready pod -l app=csi-do-controller-dev
        echo "wait csi-do-node-dev"
        kubectl --kubeconfig=${GITHUB_WORKSPACE}/kubeconfig -n kube-system wait --timeout=5m --for=condition=Ready pod -l app=csi-do-node-dev
      env:
        IMAGE_NAME: ${{ steps.docker.outputs.IMAGE_SHA_NAME }}
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DigitalOceanToken }}
        GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
    - name: run integration tests
      run: |-
        go test -v -tags integration ./test/kubernetes
      env:
        TEST_STORAGE_CLASS: do-block-storage-dev
    # - name: delete cluster
    #   if: always()
    #   uses: ./.github/actions/delete-cluster-action
    #   env:
    #     DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DigitalOceanToken }}
    #   with:
    #     CLUSTER_ID: ${{ steps.cluster.outputs.CLUSTER_ID }}
